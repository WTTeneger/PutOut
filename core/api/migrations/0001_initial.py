# Generated by Django 3.2.10 on 2022-06-30 16:51

import core.main.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('HEAD', 'Голова'), ('ARM', 'Руки'), ('CHEST', 'Туловище'), ('LEGS', 'Ноги'), ('WEAPON', 'Оружие'), ('SKIN', 'Скин')], max_length=200, verbose_name='Тип предмета')),
                ('title', models.CharField(max_length=200, verbose_name='Название предмета')),
                ('level', models.IntegerField(default=0, verbose_name='Описание')),
                ('skin', models.IntegerField(default=0, verbose_name='Скин')),
            ],
            options={
                'verbose_name': 'Персонаж',
                'verbose_name_plural': 'Персонажи',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characters', models.ManyToManyField(to='main.Character', verbose_name='Персонажи пользователя')),
            ],
            options={
                'verbose_name': 'Данные пользователя',
                'verbose_name_plural': 'Данные пользователей',
            },
        ),
        migrations.CreateModel(
            name='SiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_mode', models.BooleanField(default=False, verbose_name='Режим обслуживания')),
            ],
            options={
                'verbose_name': 'Настройки сайта',
            },
        ),
        migrations.CreateModel(
            name='Stats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayInGame', models.IntegerField(verbose_name='Дней в игре')),
                ('lastUpdate', models.DateTimeField(verbose_name='Дата последнего захода')),
            ],
            options={
                'verbose_name': 'Данные статистики пользователя',
                'verbose_name_plural': 'Данные статистики пользователей',
            },
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('uuid', models.UUIDField(auto_created=True, default=uuid.UUID('bd25ad72-65ab-4939-85d5-074fdb260bd7'), primary_key=True, serialize=False, verbose_name='UUID транзации')),
                ('dateCreate', models.DateTimeField(verbose_name='Дата создания')),
                ('dateCompiled', models.DateTimeField(verbose_name='Дата окончания')),
                ('target', models.CharField(choices=[('purchase', 'purchase'), ('replenishment', 'replenishment'), ('withdrawal', 'withdrawal')], max_length=30, verbose_name='Цель транзации')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('inwork', 'В работе'), ('end', 'Закончен')], max_length=30, verbose_name='Статус')),
                ('total', models.FloatField(verbose_name='Сумма')),
            ],
            options={
                'verbose_name': 'Данные транзации',
                'verbose_name_plural': 'Данные транзаций',
            },
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя пользователя')),
                ('mail', models.CharField(max_length=250, null=True, verbose_name='mail')),
                ('verified', models.BooleanField(default=0, verbose_name='Проверка')),
                ('balance', models.FloatField(default=0, validators=[core.main.models.validate_decimals], verbose_name='Баланс')),
                ('bonus_balance', models.FloatField(default=0, validators=[core.main.models.validate_decimals], verbose_name='Бонусный баланс')),
                ('from_user', models.ForeignKey(blank=True, null=True, on_delete=models.SET(''), to='main.userdata', verbose_name='От кого пришёл')),
                ('inventory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.inventory', verbose_name='Инвентарь')),
                ('login', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Данные авторизации')),
                ('stats', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.stats', verbose_name='Статистика')),
                ('transactions', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.transactions', verbose_name='Операции')),
            ],
            options={
                'verbose_name': 'Данные пользователя',
                'verbose_name_plural': 'Данные пользователей',
            },
        ),
        migrations.CreateModel(
            name='StoreItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(verbose_name='Цена товара')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('ended', 'Законченный')], max_length=200, verbose_name='Типы предметов')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=models.SET(''), to='main.userdata', verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('HEAD', 'Голова'), ('ARM', 'Руки'), ('CHEST', 'Туловище'), ('LEGS', 'Ноги'), ('WEAPON', 'Оружие'), ('SKIN', 'Скин')], max_length=200, verbose_name='Тип предмета')),
                ('title', models.CharField(max_length=200, verbose_name='Название предмета')),
                ('description', models.CharField(max_length=200, verbose_name='Описание')),
                ('rarity', models.CharField(choices=[('UNCOMMON', 'Обычная'), ('COMMON', 'Интересная'), ('RARE', 'Редкая'), ('EPIC', 'Раритетная')], max_length=200, verbose_name='Типы предметов')),
                ('endurance', models.IntegerField(verbose_name='Прочность')),
                ('image', models.CharField(max_length=255, verbose_name='Изображение')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=models.SET(''), to='main.userdata', verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
            },
        ),
        migrations.AddField(
            model_name='inventory',
            name='items',
            field=models.ManyToManyField(to='main.Item', verbose_name='Предметы пользователя'),
        ),
        migrations.AddField(
            model_name='character',
            name='arm',
            field=models.OneToOneField(blank=True, null=True, on_delete=models.SET(''), related_name='c_arm', to='main.item', verbose_name='Надетый придмет на Руки'),
        ),
        migrations.AddField(
            model_name='character',
            name='chest',
            field=models.OneToOneField(blank=True, null=True, on_delete=models.SET(''), related_name='c_chest', to='main.item', verbose_name='Надетый придмет на Грудь'),
        ),
        migrations.AddField(
            model_name='character',
            name='head',
            field=models.OneToOneField(blank=True, null=True, on_delete=models.SET(''), related_name='c_head', to='main.item', verbose_name='Надетый придмет на Голову'),
        ),
        migrations.AddField(
            model_name='character',
            name='legs',
            field=models.OneToOneField(blank=True, null=True, on_delete=models.SET(''), related_name='c_legs', to='main.item', verbose_name='Надетый придмет на Ноги'),
        ),
        migrations.AddField(
            model_name='character',
            name='weapon',
            field=models.OneToOneField(blank=True, null=True, on_delete=models.SET(''), related_name='c_weapon', to='main.item', verbose_name='Оружие'),
        ),
    ]
